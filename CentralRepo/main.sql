CREATE DATABASE QuanLyBanVeMayBay
USE QuanLyBanVeMayBay

-- Tạo bảng MAYBAY
CREATE TABLE MAYBAY (
    MAMB CHAR(8) PRIMARY KEY,
    TENMAYBAY VARCHAR(40) NOT NULL,
    TONGSOGHE INT NOT NULL,
    HANGSANXUAT VARCHAR(50) NOT NULL
);

-- Tạo bảng SANBAY
CREATE TABLE SANBAY (
    MASB CHAR(8) PRIMARY KEY,
    TENSB NVARCHAR(40) NOT NULL
);

-- Tạo bảng TUYENBAY
CREATE TABLE TUYENBAY (
    MATB CHAR(8) PRIMARY KEY,
    MASBDI CHAR(8) FOREIGN KEY REFERENCES SANBAY(MASB),
    MASBDEN CHAR(8) FOREIGN KEY REFERENCES SANBAY(MASB)
);

-- Tạo bảng CHUYENBAY
CREATE TABLE CHUYENBAY (
    MACB CHAR(8) PRIMARY KEY,
    MATB CHAR(8) FOREIGN KEY REFERENCES TUYENBAY(MATB),
    MAMB CHAR(8) FOREIGN KEY REFERENCES MAYBAY(MAMB),
    NGAYKHOIHANH SMALLDATETIME NOT NULL,
    GIOKHOIHANH SMALLDATETIME NOT NULL,
    THOIGIANDUKIEN TIME NOT NULL,
    DIEMDI NVARCHAR(40) NOT NULL,
    DIEMDEN NVARCHAR(40) NOT NULL,
    TONGSOGHE INT NOT NULL
);

-- Tạo bảng TAIKHOAN
CREATE TABLE TAIKHOAN (
    ID_TAIKHOAN CHAR(8) PRIMARY KEY,
    TENTAIKHOAN VARCHAR(50) NOT NULL
);

-- Tạo bảng NHANVIEN
CREATE TABLE NHANVIEN (
    MANV CHAR(8) PRIMARY KEY,
    TENNV NVARCHAR(30) NOT NULL,
    DIACHI NCHAR(50),
    SODT VARCHAR(10) UNIQUE,
    NGAYSINH SMALLDATETIME NOT NULL,
    NGAYVAOLAM SMALLDATETIME NOT NULL,
    GIOITINH NCHAR(3) NOT NULL,
    EMAIL VARCHAR(50) UNIQUE,
    PASSWORD VARCHAR(25) NOT NULL,
    NGAYTAOTK DATETIME NOT NULL,
    ID_TAIKHOAN CHAR(8) FOREIGN KEY REFERENCES TAIKHOAN(ID_TAIKHOAN)
);

-- Tạo bảng KHACHHANG
CREATE TABLE KHACHHANG (
    MAKH CHAR(8) PRIMARY KEY,
    TENKH NVARCHAR(30) NOT NULL,
    GIOITINH NCHAR(3) NOT NULL,
    NGAYSINH SMALLDATETIME NOT NULL,
    CCCD NVARCHAR(12) UNIQUE,
    NGAYCAP SMALLDATETIME NOT NULL,
    QUOCTICH NVARCHAR(30) NOT NULL,
    SODT VARCHAR(10) UNIQUE,
    EMAIL VARCHAR(50) UNIQUE,
    DIACHI NCHAR(50) NOT NULL,
    PASSWORD VARCHAR(25) NOT NULL,
    NGAYTAOTK DATETIME NOT NULL,
    ID_TAIKHOAN CHAR(8) FOREIGN KEY REFERENCES TAIKHOAN(ID_TAIKHOAN)
);

-- Tạo bảng HANGVE
CREATE TABLE HANGVE (
    MAHV CHAR(8) PRIMARY KEY,
    TENHANGVE NVARCHAR(20) NOT NULL
);
-- Tạo bảng TINHTRANGVE
CREATE TABLE TINHTRANGVE (
    MATTV CHAR(8) PRIMARY KEY,
    MACB CHAR(8) FOREIGN KEY REFERENCES CHUYENBAY(MACB),
    MAHV CHAR(8) FOREIGN KEY REFERENCES HANGVE(MAHV),
    SOGHETRONG INT NOT NULL
);
-- Tạo bảng VE
CREATE TABLE VE (
    MAVE CHAR(8) PRIMARY KEY,
    MAHV CHAR(8) FOREIGN KEY REFERENCES HANGVE(MAHV),
    MACB CHAR(8) FOREIGN KEY REFERENCES CHUYENBAY(MACB),
    MAKH CHAR(8) FOREIGN KEY REFERENCES KHACHHANG(MAKH),
    GHE INT UNIQUE,
    GIAVE MONEY NOT NULL
);

-- Tạo bảng HOADON
CREATE TABLE HOADON (
    MAHD CHAR(8) PRIMARY KEY,
    MANV CHAR(8) FOREIGN KEY REFERENCES NHANVIEN(MANV),
    MAKH CHAR(8) FOREIGN KEY REFERENCES KHACHHANG(MAKH),
    NGAYLAP SMALLDATETIME NOT NULL,
    MAVE CHAR(8) FOREIGN KEY REFERENCES VE(MAVE),
    SOVE INT NOT NULL,
    THANHTIEN MONEY NOT NULL
);

-- Tạo dữ liệu mẫu

-- Thêm dữ liệu vào bảng MAYBAY
INSERT INTO MAYBAY VALUES ('MB00001', 'Airbus A320', 180, 'Airbus');
INSERT INTO MAYBAY VALUES ('MB00002', 'Boeing 777', 400, 'Boeing');
INSERT INTO MAYBAY VALUES ('MB00003', 'Airbus A350', 250, 'Airbus');
INSERT INTO MAYBAY VALUES ('MB00004', 'Boeing 737', 190, 'Boeing');
INSERT INTO MAYBAY VALUES ('MB00005', 'Airbus A380', 500, 'Airbus');
INSERT INTO MAYBAY VALUES ('MB00006', 'Boeing 747', 180, 'Boeing');
INSERT INTO MAYBAY VALUES ('MB00007', 'Airbus A330', 400, 'Airbus');
INSERT INTO MAYBAY VALUES ('MB00008', 'Boeing 787', 250, 'Boeing');
INSERT INTO MAYBAY VALUES ('MB00009', 'Airbus A340', 190, 'Airbus');
INSERT INTO MAYBAY VALUES ('MB00010', 'Boeing 767', 500, 'Boeing');

-- Thêm dữ liệu vào bảng SANBAY
INSERT INTO SANBAY VALUES ('SB00001', N'Tân Sơn Nhất');
INSERT INTO SANBAY VALUES ('SB00002', N'Nội Bài');
INSERT INTO SANBAY VALUES ('SB00003', N'Đà Nẵng');
INSERT INTO SANBAY VALUES ('SB00004', N'Cam Ranh');
INSERT INTO SANBAY VALUES ('SB00005', N'Phú Bài');
INSERT INTO SANBAY VALUES ('SB00006', N'Liên Khương');
INSERT INTO SANBAY VALUES ('SB00007', N'Phú Quốc');
INSERT INTO SANBAY VALUES ('SB00008', N'Vinh');
INSERT INTO SANBAY VALUES ('SB00009', N'Đồng Hới');
INSERT INTO SANBAY VALUES ('SB00010', N'Chu Lai');

-- Thêm dữ liệu vào bảng TUYENBAY
INSERT INTO TUYENBAY VALUES ('TB00001', 'SB00001', 'SB00002');
INSERT INTO TUYENBAY VALUES ('TB00002', 'SB00002', 'SB00003');
INSERT INTO TUYENBAY VALUES ('TB00003', 'SB00003', 'SB00004');
INSERT INTO TUYENBAY VALUES ('TB00004', 'SB00004', 'SB00005');
INSERT INTO TUYENBAY VALUES ('TB00005', 'SB00005', 'SB00006');
INSERT INTO TUYENBAY VALUES ('TB00006', 'SB00006', 'SB00007');
INSERT INTO TUYENBAY VALUES ('TB00007', 'SB00007', 'SB00001');
INSERT INTO TUYENBAY VALUES ('TB00008', 'SB00001', 'SB00003');
INSERT INTO TUYENBAY VALUES ('TB00009', 'SB00002', 'SB00004');
INSERT INTO TUYENBAY VALUES ('TB00010', 'SB00003', 'SB00005');

-- Thêm dữ liệu vào bảng CHUYENBAY
INSERT INTO CHUYENBAY VALUES ('CB00001', 'TB00001', 'MB00001', '2021-10-30', '06:00', '02:00:00', N'Tân Sơn Nhất', N'Nội Bài', 180);
INSERT INTO CHUYENBAY VALUES ('CB00002', 'TB00002', 'MB00002', '2021-10-30', '08:00', '02:00:00', N'Nội Bài', N'Đà Nẵng', 400);
INSERT INTO CHUYENBAY VALUES ('CB00003', 'TB00003', 'MB00003', '2021-10-30', '10:00', '02:00:00', N'Đà Nẵng', N'Cam Ranh', 250);
INSERT INTO CHUYENBAY VALUES ('CB00004', 'TB00004', 'MB00004', '2021-10-30', '12:00', '02:00:00', N'Cam Ranh', N'Phú Bài', 190);
INSERT INTO CHUYENBAY VALUES ('CB00005', 'TB00005', 'MB00005', '2021-10-30', '14:00', '02:00:00', N'Phú Bài', N'Liên Khương', 500);
INSERT INTO CHUYENBAY VALUES ('CB00006', 'TB00006', 'MB00001', '2021-10-30', '16:00', '02:00:00', N'Liên Khương', N'Phú Quốc', 180);
INSERT INTO CHUYENBAY VALUES ('CB00007', 'TB00007', 'MB00002', '2021-10-30', '18:00', '02:00:00', N'Phú Quốc', N'Tân Sơn Nhất', 400);
INSERT INTO CHUYENBAY VALUES ('CB00008', 'TB00008', 'MB00003', '2021-10-30', '20:00', '02:00:00', N'Tân Sơn Nhất', N'Đà Nẵng', 250);
INSERT INTO CHUYENBAY VALUES ('CB00009', 'TB00009', 'MB00004', '2021-10-30', '22:00', '02:00:00', N'Nội Bài', N'Cam Ranh', 190);
INSERT INTO CHUYENBAY VALUES ('CB00010', 'TB00010', 'MB00005', '2021-10-30', '23:00', '02:00:00', N'Đà Nẵng', N'Phú Bài', 500);


-- Thêm dữ liệu vào bảng TAIKHOAN

INSERT INTO TAIKHOAN VALUES ('TK00001', 'admin');
INSERT INTO TAIKHOAN VALUES ('TK00002', 'user');

-- Thêm dữ liệu vào bảng NHANVIEN
INSERT INTO NHANVIEN VALUES ('NV00001', N'Nguyễn Văn A', N'123 Đường ABC', '0123456789', '1990-10-10', '2021-10-25', N'Nam', 'nva@gmail.com', '123456', '2021-10-25', 'TK00001');
INSERT INTO NHANVIEN VALUES ('NV00002', N'Trần Thị B', N'456 Đường XYZ', '0987654320', '1991-10-10', '2022-10-23', N'Nữ', 'ttb@gmail.com', '234567', '2022-10-23', 'TK00001');
INSERT INTO NHANVIEN VALUES ('NV00003', N'Lê Văn C', N'789 Đường DEF', '0987654321', '1992-10-10', '2023-10-26', N'Nam', 'lvc@gmail.com', '345678', '2023-10-26', 'TK00001');
INSERT INTO NHANVIEN VALUES ('NV00004', N'Nguyễn Thị D', N'101 Đường UVW', '0987654322', '1993-10-10', '2023-11-27', N'Nữ', 'ntd@gmail.com', '456789', '2023-11-27', 'TK00001');
INSERT INTO NHANVIEN VALUES ('NV00005', N'Trần Văn E', N'121 Đường GHI', '0987654323', '1994-10-10', '2019-01-01', N'Nam', 'tve@gmail.com', '567890', '2019-01-01', 'TK00001');
INSERT INTO NHANVIEN VALUES ('NV00006', N'Lê Thị F', N'141 Đường KLM', '0987654324', '1995-10-10', '2019-02-02', N'Nữ', 'ltf@gmail.com', '678901', '2019-02-02', 'TK00001');
INSERT INTO NHANVIEN VALUES ('NV00007', N'Nguyễn Văn G', N'161 Đường NOP', '0987654325', '1996-10-10', '2019-03-03', N'Nam', 'nvg@gmail.com', '789012', '2019-03-03', 'TK00001');
INSERT INTO NHANVIEN VALUES ('NV00008', N'Trần Thị H', N'181 Đường QRS', '0987654326', '1997-10-10', '2019-04-04', N'Nữ', 'tth@gmail.com', '890123', '2019-04-04', 'TK00001');

-- Thêm dữ liệu vào bảng KHACHHANG
INSERT INTO KHACHHANG VALUES ('KH00001', N'Nguyễn Văn F', N'Nam', '1995-10-10', '123456789012', '2021-10-25', N'Việt Nam', '0223456780','nvf@gmail.com', N'456 ĐƯỜNG ABC', '123456', '2020-01-01', 'TK00002');
INSERT INTO KHACHHANG VALUES ('KH00002', N'Trần Thị G', N'Nữ', '1996-10-10', '123456789013', '2022-10-23', N'Việt Nam', '0223456781','ttg@gmail.com', N'456 ĐƯỜNG XYZ', '234567', '2021-06-03', 'TK00002');
INSERT INTO KHACHHANG VALUES ('KH00003', N'Lê Văn H', N'Nam', '1997-10-10', '123456789014', '2023-10-26', N'Việt Nam', '0223456782','lvh@gmail.com', N'456 ĐƯỜNG DEF', '345678', '2022-07-04', 'TK00002');
INSERT INTO KHACHHANG VALUES ('KH00004', N'Nguyễn Thị I', N'Nữ', '1998-10-10', '123456789015', '2023-11-27', N'Việt Nam', '0223456783','nti@gmail.com', N'456 ĐƯỜNG UVW', '456789', '2023-08-05', 'TK00002');

-- Thêm dữ liệu vào bảng HANGVE
INSERT INTO HANGVE VALUES ('HV00001', N'Phổ thông');
INSERT INTO HANGVE VALUES ('HV00002', N'Thương gia');
INSERT INTO HANGVE VALUES ('HV00003', N'Phổ thông cao cấp');
INSERT INTO HANGVE VALUES ('HV00004', N'Phổ thông thấp');


-- Thêm dữ liệu vào bảng TINHTRANGVE
INSERT INTO TINHTRANGVE VALUES ('TTV00001', 'CB00001', 'HV00001', 180);
INSERT INTO TINHTRANGVE VALUES ('TTV00002', 'CB00002', 'HV00002', 400);
INSERT INTO TINHTRANGVE VALUES ('TTV00003', 'CB00003', 'HV00003', 250);
INSERT INTO TINHTRANGVE VALUES ('TTV00004', 'CB00004', 'HV00004', 190);
INSERT INTO TINHTRANGVE VALUES ('TTV00005', 'CB00005', 'HV00001', 500);
INSERT INTO TINHTRANGVE VALUES ('TTV00006', 'CB00006', 'HV00002', 180);
INSERT INTO TINHTRANGVE VALUES ('TTV00007', 'CB00007', 'HV00003', 400);


-- Thêm dữ liệu vào bảng VE
INSERT INTO VE VALUES ('VE00001', 'HV00001', 'CB00001', 'KH00001', 1, 1000000);
INSERT INTO VE VALUES ('VE00002', 'HV00002', 'CB00002', 'KH00002', 2, 2000000);
INSERT INTO VE VALUES ('VE00003', 'HV00003', 'CB00003', 'KH00003', 3, 3000000);
INSERT INTO VE VALUES ('VE00004', 'HV00004', 'CB00004', 'KH00004', 4, 4000000);

-- Thêm dữ liệu vào bảng HOADON
INSERT INTO HOADON VALUES ('HD00001', 'NV00001', 'KH00001', '2020-01-01', 'VE00001', 1, 1000000);
INSERT INTO HOADON VALUES ('HD00002', 'NV00002', 'KH00002', '2021-02-02', 'VE00002', 2, 2000000);
INSERT INTO HOADON VALUES ('HD00003', 'NV00003', 'KH00003', '2021-02-03', 'VE00003', 3, 3000000);
INSERT INTO HOADON VALUES ('HD00004', 'NV00004', 'KH00004', '2021-02-04', 'VE00004', 4, 4000000);

--Trigger kiểm tra nhân viên được thêm mới phải đảm bảo đủ 18 tuổi--
GO
CREATE TRIGGER TR_NHANVIEN_BeforeInsert
ON NHANVIEN
INSTEAD OF INSERT
AS
BEGIN
    SET NOCOUNT ON;

    DECLARE @CurrentDate DATE;
    SET @CurrentDate = GETDATE();

    IF (SELECT DATEDIFF(YEAR, (SELECT NGAYSINH FROM INSERTED), @CurrentDate)) < 18
    BEGIN
        RAISERROR('Nhân viên phải đủ 18 tuổi.', 16, 1);
        ROLLBACK TRANSACTION;
        RETURN;
    END;
    -- Tiếp tục với việc chèn dữ liệu vào bảng NHANVIEN nếu không có vấn đề
    INSERT INTO NHANVIEN (MANV, TENNV, DIACHI, SODT, NGAYSINH, NGAYVAOLAM, GIOITINH, EMAIL, PASSWORD, NGAYTAOTK, ID_TAIKHOAN)
    SELECT MANV, TENNV, DIACHI, SODT, NGAYSINH, NGAYVAOLAM, GIOITINH, EMAIL, PASSWORD, NGAYTAOTK, ID_TAIKHOAN
    FROM INSERTED;
END;

--Trigger kiểm tra nhân viên được cập nhật phải đủ 18 tuổi--
GO
CREATE TRIGGER TR_NHANVIEN_BeforeUpdate
ON NHANVIEN
INSTEAD OF UPDATE
AS
BEGIN
    SET NOCOUNT ON;

    DECLARE @CurrentDate DATE;
    SET @CurrentDate = GETDATE();

    IF (SELECT DATEDIFF(YEAR, (SELECT NGAYSINH FROM INSERTED), @CurrentDate)) < 18
    BEGIN
        RAISERROR('Nhân viên phải đủ 18 tuổi.', 16, 1);
        ROLLBACK TRANSACTION;
        RETURN;
    END;

    -- Tiếp tục với việc cập nhật dữ liệu trong bảng NHANVIEN nếu không có vấn đề
    UPDATE NHANVIEN
    SET TENNV = INSERTED.TENNV, DIACHI = INSERTED.DIACHI, SODT = INSERTED.SODT, 
        NGAYSINH = INSERTED.NGAYSINH, NGAYVAOLAM = INSERTED.NGAYVAOLAM, 
        GIOITINH = INSERTED.GIOITINH, EMAIL = INSERTED.EMAIL, 
        PASSWORD = INSERTED.PASSWORD, NGAYTAOTK = INSERTED.NGAYTAOTK, 
        ID_TAIKHOAN = INSERTED.ID_TAIKHOAN
    FROM INSERTED
    WHERE NHANVIEN.MANV = INSERTED.MANV;
END;


-- Trigger để đảm bảo ràng buộc mối quan hệ giữa NHANVIEN và TAIKHOAN
GO
CREATE TRIGGER TR_NHANVIEN_TAIKHOAN_AfterInsert
ON NHANVIEN
AFTER INSERT
AS
BEGIN
    SET NOCOUNT ON;

    DECLARE @count_tk INT;
    SELECT @count_tk = COUNT(*) FROM TAIKHOAN WHERE ID_TAIKHOAN IN (SELECT ID_TAIKHOAN FROM INSERTED);

    IF @count_tk < (SELECT COUNT(*) FROM INSERTED)
    BEGIN
        RAISERROR('Mỗi nhân viên phải có một tài khoản.', 16, 1);
        ROLLBACK TRANSACTION;
        RETURN;
    END;
END;

-- Trigger để đảm bảo ràng buộc mối quan hệ giữa KHACHHANG và TAIKHOAN
GO
CREATE TRIGGER TR_KHACHHANG_TAIKHOAN_AfterInsert
ON KHACHHANG
AFTER INSERT
AS
BEGIN
    SET NOCOUNT ON;

    DECLARE @count_tk INT;
    SELECT @count_tk = COUNT(*) FROM TAIKHOAN WHERE ID_TAIKHOAN IN (SELECT ID_TAIKHOAN FROM INSERTED);

    IF @count_tk < (SELECT COUNT(*) FROM INSERTED)
    BEGIN
        RAISERROR('Mỗi khách hàng phải có một tài khoản.', 16, 1);
        ROLLBACK TRANSACTION;
        RETURN;
    END;
END;


-- Trigger để đảm bảo ràng buộc mối quan hệ giữa VE và KHACHHANG
GO
CREATE TRIGGER TR_VE_KHACHHANG_InsteadOfInsert
ON VE
INSTEAD OF INSERT
AS
BEGIN
    DECLARE @count_kh INT;
    SELECT @count_kh = COUNT(*) FROM KHACHHANG WHERE MAKH IN (SELECT MAKH FROM INSERTED);
    IF @count_kh = 0
    BEGIN
        RAISERROR('Mỗi vé phải thuộc sở hữu của một khách hàng.', 16, 1);
        ROLLBACK TRANSACTION;
        RETURN;
    END;
    ELSE
    BEGIN
        INSERT INTO VE (MAVE, MAHV, MACB, MAKH, GHE, GIAVE)
        SELECT MAVE, MAHV, MACB, MAKH, GHE, GIAVE FROM INSERTED;
    END;
END;


-- Trigger để đảm bảo ràng buộc mối quan hệ giữa HOADON và KHACHHANG
GO
CREATE TRIGGER TR_HOADON_KHACHHANG_BeforeInsert
ON HOADON
INSTEAD OF INSERT
AS
BEGIN
    DECLARE @count_kh INT;
    SELECT @count_kh = COUNT(*) FROM KHACHHANG WHERE MAKH IN (SELECT MAKH FROM INSERTED);
    IF @count_kh = 0
    BEGIN
        RAISERROR('Mỗi hóa đơn phải thuộc sở hữu của một khách hàng.', 16, 1);
        ROLLBACK TRANSACTION;
        RETURN;
    END;
    ELSE
    BEGIN
        INSERT INTO HOADON (MAHD, MANV, MAKH, NGAYLAP, MAVE, SOVE, THANHTIEN)
        SELECT MAHD, MANV, MAKH, NGAYLAP, MAVE, SOVE, THANHTIEN FROM INSERTED;
    END;
END;


-- Trigger để đảm bảo ràng buộc mối quan hệ giữa VE và HOADON
GO
CREATE TRIGGER TR_VE_HOADON_Insert
ON VE
AFTER INSERT
AS
BEGIN
    -- Kiểm tra mối quan hệ giữa VE và HOADON
    DECLARE @count_hd INT;
    SELECT @count_hd = COUNT(*) FROM HOADON WHERE MAVE IN (SELECT MAVE FROM inserted);
    
    -- Nếu mối quan hệ bị vi phạm, thông báo lỗi và quay lại giao dịch
    IF @count_hd = 0
    BEGIN
        RAISERROR ('Mỗi vé phải thuộc sở hữu của một hóa đơn.', 16, 1);
        ROLLBACK TRANSACTION;
        RETURN;
    END;
END;


-- Trigger để đảm bảo ràng buộc mối quan hệ giữa VE và HANGVE
GO
CREATE TRIGGER Check_HangVe_For_Ve
ON VE
FOR INSERT, UPDATE
AS
BEGIN
    IF EXISTS (SELECT 1 FROM inserted i WHERE NOT EXISTS (SELECT 1 FROM HANGVE WHERE MAHV = i.MAHV))
    BEGIN
        RAISERROR ('Không tồn tại Hạng vé tương ứng', 16, 1)
        ROLLBACK TRANSACTION
    END
END;


-- Trigger để đảm bảo ràng buộc mối quan hệ giữa VE và CHUYENBAY
GO
CREATE TRIGGER Check_ChuyenBay_For_Ve
ON VE
FOR INSERT, UPDATE
AS
BEGIN
    IF EXISTS (SELECT 1 FROM inserted i WHERE NOT EXISTS (SELECT 1 FROM CHUYENBAY WHERE MACB = i.MACB))
    BEGIN
        RAISERROR ('Không tồn tại Chuyến bay tương ứng', 16, 1)
        ROLLBACK TRANSACTION
    END
END;

