USE FLIGHT_BOOKING;

-- View để ẩn mật khẩu cho nhân viên
CREATE VIEW EMPLOYEE_VIEW AS
SELECT EMPLOYEE_ID, EMPLOYEE_NAME, ADDRESS, PHONE_NO, BIRTHDAY, HIRE_DATE, GENDER, EMAIL, SIGNUP_DATE
FROM EMPLOYEE;

REVOKE SELECT ON FLIGHT_BOOKING.EMPLOYEE FROM EMPLOYEE_role;
GRANT SELECT ON FLIGHT_BOOKING.EMPLOYEE_VIEW TO EMPLOYEE_role;

-- View để ẩn mật khẩu cho khách hàng 
CREATE VIEW CUSTOMER_VIEW AS
SELECT CUSTOMER_ID, CUSTOMER_NAME, GENDER, BIRTHDAY, NATIONALITY, PHONE_NO, EMAIL, ADDRESS, SIGNUP_DATE
FROM CUSTOMER;

REVOKE SELECT ON FLIGHT_BOOKING.CUSTOMER FROM EMPLOYEE_role;
GRANT SELECT ON FLIGHT_BOOKING.CUSTOMER_VIEW TO EMPLOYEE_role;

-- View để xem chi tiết chuyến bay
CREATE VIEW FLIGHT_INFO_VIEW AS
SELECT CB.FLIGHT_ID, DEPARTURE_DATE, DEPARTURE_TIME, LANDING_TIME, PRICE, CLASS_NAME
FROM FLIGHT CB JOIN TICKET ON CB.FLIGHT_ID = TICKET.FLIGHT_ID 
	JOIN CLASS HV ON TICKET.CLASS_ID = HV.CLASS_ID
ORDER BY CB.FLIGHT_ID;
	
-- View để xem tổng tiền mua hàng của khách hàng
CREATE VIEW CUSTOMER_TOTAL_PURCHASE_VIEW AS
SELECT KH.CUSTOMER_ID, CUSTOMER_NAME, COALESCE(SUM(HD.TOTAL),0) AS TOTAL_PURCHASE
FROM CUSTOMER KH LEFT JOIN INVOICE HD ON KH.CUSTOMER_ID = HD.CUSTOMER_ID
WHERE STATUS = 1 
GROUP BY KH.CUSTOMER_ID
ORDER BY KH.CUSTOMER_ID;


-- View để xem hóa đơn chưa thanh toán
CREATE VIEW UNPAID_INVOICE AS
SELECT INVOICE_ID, EMPLOYEE_ID, CUSTOMER_ID, INVOICE_DATE
FROM INVOICE
WHERE STATUS = 0;

-- View để xem hóa đơn đã thanh toán
CREATE VIEW PAID_INVOICE AS
SELECT INVOICE_ID, EMPLOYEE_ID, CUSTOMER_ID, INVOICE_DATE
FROM INVOICE 
WHERE STATUS = 1;


